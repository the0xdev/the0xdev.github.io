<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Restic on I.M Blogging</title><link>https://imranmustafa.net/tags/restic/</link><description>Recent content in Restic on I.M Blogging</description><generator>Hugo</generator><language>en</language><managingEditor>imran@imranmustafa.net (Imran Mustafa)</managingEditor><webMaster>imran@imranmustafa.net (Imran Mustafa)</webMaster><lastBuildDate>Sat, 16 Nov 2024 16:32:42 -0500</lastBuildDate><atom:link href="https://imranmustafa.net/tags/restic/index.xml" rel="self" type="application/rss+xml"/><item><title>Simple Restic Backups on Nixos</title><link>https://imranmustafa.net/simple-restic-backup-on-nixos/</link><pubDate>Sat, 16 Nov 2024 16:32:42 -0500</pubDate><author>imran@imranmustafa.net (Imran Mustafa)</author><guid>https://imranmustafa.net/simple-restic-backup-on-nixos/</guid><description>&lt;p>When it comes to all the things that &lt;a href="https://nixos.org/">nix&lt;/a> lets you do, defining complex services
deterministically in text, is probably the most powerful. For example I have nix
manage all of my system backup jobs. Which could be handled with a shell
script, but can be so much more extensible when configured entirely within nix. I
hope showing off how I manage this can help you further understand what you can
do with nix, especially with configuring services.&lt;/p></description></item></channel></rss>